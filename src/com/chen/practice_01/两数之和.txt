1   两数之和 -- 容易
    给定一个整数数组和一个目标值，找出数组中和为目标值的两个数，你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。
    示例: 给定 nums = [2, 7, 11, 15], target = 9
        因为 nums[0] + nums[1] = 2 + 7 = 9
        所以返回 [0, 1]

    	/**
    	 *	简单来说，时间复杂度指的是语句执行次数，空间复杂度指的是算法所占的存储空间
    	 *	时间复杂度是指执行算法所需要的计算工作量,时间复杂度的计算并不是计算程序具体运行的时间，而是算法执行语句的次数。
    	 *	平均时间复杂度是指所有可能的输入实例均以等概率出现的情况下，算法的期望运行时间。
    	 *	通常我们计算时间复杂度都是计算最坏情况
    	 *	空间复杂度(Space Complexity)是对一个算法在运行过程中临时占用存储空间大小的量度
    	 */

        /**
         *	因为 HashMap 的低时间复杂度，同时索引值逐层向上包容，所以，最后索引值的结果中
         *	前面的索引值存放于map的反转 getValue 中
         */